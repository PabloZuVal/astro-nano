---
import { getCollection, type CollectionEntry } from "astro:content";
import Container from "@components/Container.astro";
import PageLayout from "@layouts/PageLayout.astro";
import ArrowCard from "@components/ArrowCard.astro";
import Link from "@components/Link.astro";
import { dateRange } from "@lib/utils";
import { SITE, HOME, SOCIALS } from "@consts";

// const blog = (await getCollection("blog"))
//   .filter(post => !post.data.draft)
//   .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
//   .slice(0,SITE.NUM_POSTS_ON_HOMEPAGE);

const projects = (await getCollection("projects"))
  .filter((project: CollectionEntry<"projects">) => !project.data.draft)
  .sort((a: CollectionEntry<"projects">, b: CollectionEntry<"projects">) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0,SITE.NUM_PROJECTS_ON_HOMEPAGE);

const allwork = (await getCollection("work"))
  .sort((a: CollectionEntry<"work">, b: CollectionEntry<"work">) => new Date(b.data.dateStart).valueOf() - new Date(a.data.dateStart).valueOf())
  .slice(0,SITE.NUM_WORKS_ON_HOMEPAGE);

const work = await Promise.all(
  allwork.map(async (item: CollectionEntry<"work">) => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);

---

<PageLayout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <Container>
    <div class="animate flex items-start gap-6 mb-6">
      <img
        src="/profile.jpeg"
        alt="Pablo Z√∫√±iga"
        class="w-24 h-24 rounded-full object-cover border-2 border-black/10 dark:border-white/10"
      />
      <div>
        <h4 class="font-semibold text-black dark:text-white">
          Hi, I'm Pablo <span class="text-xl">üëãüèª</span>
        </h4>
        <p class="text-sm opacity-75 mt-1">Software Engineer | AI & Full-Stack Developer</p>
      </div>
    </div>

    <div class="space-y-8">
      <section class="animate space-y-4">
        <article>
          <p>
            Full Stack Software Engineer with over 4 years of experience developing web applications using React, NestJS, Python, FastAPI, and PostgreSQL. Strong expertise in requirements analysis, API design, and code refactoring. Currently working with AI tools, integrating OpenAI API and developing conversational agents. Passionate about creating technological solutions that solve real-world problems and enhance user experience.
          </p>
        </article>
      </section>

      <section class="animate space-y-4">
        <h5 class="font-semibold text-black dark:text-white">
          Technical Skills
        </h5>
        <div class="space-y-3">
          <div>
            <p class="text-sm font-medium opacity-75">Frontend</p>
            <p class="text-sm">React, Angular, Vue.js, TypeScript, Tailwind CSS, Material-UI</p>
          </div>
          <div>
            <p class="text-sm font-medium opacity-75">Backend</p>
            <p class="text-sm">NestJS, Node.js, FastAPI, Python, Express, PostgreSQL, MySQL, TypeORM</p>
          </div>
          <div>
            <p class="text-sm font-medium opacity-75">AI/ML</p>
            <p class="text-sm">OpenAI API, OpenAI Assistant, Claude, Claude Code, MCP, Chainlit, NLP, Pandas, NumPy</p>
          </div>
          <div>
            <p class="text-sm font-medium opacity-75">DevOps & Tools</p>
            <p class="text-sm">Docker, AWS (EC2, SES), Git, NGINX, PM2, Agile/Scrum, JIRA</p>
          </div>
        </div>
      </section>

      <section class="animate space-y-4">
        <h5 class="font-semibold text-black dark:text-white">
          Resume
        </h5>
        <article>
          <p class="text-sm mb-3">
            Download my resume in your preferred language:
          </p>
          <div class="flex gap-3 flex-wrap">
            <a
              href="/cv-pablo-zuniga-eng.pdf"
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center gap-2 px-4 py-2 bg-black dark:bg-white text-white dark:text-black rounded-lg hover:opacity-80 transition-opacity text-sm"
            >
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
              </svg>
              English CV
            </a>
            <a
              href="/cv-pablo-zuniga-es.pdf"
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center gap-2 px-4 py-2 bg-black dark:bg-white text-white dark:text-black rounded-lg hover:opacity-80 transition-opacity text-sm"
            >
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
              </svg>
              CV en Espa√±ol
            </a>
          </div>
        </article>
      </section>

      <!-- <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Latest posts
          </h5>
          <Link href="/blog">
            See all posts
          </Link>
        </div>
        <ul class="flex flex-col gap-4">
          {blog.map(post => (
            <li>
              <ArrowCard entry={post} />
            </li>
          ))}
        </ul>
      </section> -->


      <section class="animate space-y-4">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Work Experience
          </h5>
          <Link href="/work">
            See all work
          </Link>
        </div>
        <ul class="flex flex-col space-y-4">
          {work.map(entry => (
            <li>
              <div class="text-sm opacity-75">
                {dateRange(entry.data.dateStart, entry.data.dateEnd)}
              </div>
              <div class="font-semibold text-black dark:text-white">
                {entry.data.company}
              </div>
              <div class="text-sm opacity-75">
                {entry.data.role}
              </div>
              <article>
                <entry.Content />
              </article>
            </li>
          ))}
        </ul>
      </section>

      <section class="animate space-y-4">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Recent projects
          </h5>
          <Link href="/projects">
            See all projects
          </Link>
        </div>
        <ul class="flex flex-col gap-4">
          {projects.map((project: CollectionEntry<"projects">) => (
              <li>
                <ArrowCard entry={project} />
              </li>
          ))}
        </ul>
      </section>


      <section class="animate space-y-4">
        <h5 class="font-semibold text-black dark:text-white">
          Let's Connect
        </h5>
        <article>
          <p>
            If you want to get in touch with me about something or just to say hi,
            reach out on social media or send me an email.
          </p>
        </article>
        <ul class="flex flex-wrap gap-2">
          {SOCIALS.map(SOCIAL => (
            <li class="flex gap-x-2 text-nowrap">
              <Link href={SOCIAL.HREF} external aria-label={`${SITE.NAME} on ${SOCIAL.NAME}`}>
                {SOCIAL.NAME}
              </Link>
              {"/"}
            </li>
          ))}
          <li class="line-clamp-1">
            <Link href={`mailto:${SITE.EMAIL}`} aria-label={`Email ${SITE.NAME}`}>
              {SITE.EMAIL}
            </Link>
          </li>
        </ul>
      </section>
    </div>
  </Container>
</PageLayout>
